{"version":3,"file":"static/js/257.64388e48.chunk.js","mappings":"6PAGaA,EAAYC,EAAAA,GAAAA,IAAH,8GAMTC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,0HAQRG,EAAiBH,EAAAA,GAAAA,IAAH,gFAOdI,GAAqBJ,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mE,SCiC/B,EA/CqB,WACnB,OAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAKjB,IAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAR,GAAK,OAAIC,EAASD,EAAb,GACjC,GAAE,CAACE,IACU,OAAVF,EAAJ,CAGA,IAAQS,EAAuDT,EAAvDS,MAAOC,EAAgDV,EAAhDU,aAAcC,EAAkCX,EAAlCW,YAAaC,EAAqBZ,EAArBY,SAEpCC,EAFyDb,EAAXc,OAGjDC,KAAI,SAAAf,GAAK,OAAIgB,OAAOC,OAAOjB,GAAOkB,OAAO,EAAG,EAAG,GAAtC,IACTC,KAAK,MAER,OACE,iCACE,SAACxB,EAAD,CAAUyB,GAAIhB,EAASiB,OAAS,IAAhC,mBACA,UAAC5B,EAAD,YACE,gBAAK6B,IAAG,UATG,oCASH,OAAgBX,GAAeY,IAAKd,KAC5C,4BACE,wBAAKA,KACL,yCACA,yBAAIe,KAAKC,KAAuC,GAAlCC,OAAOhB,GAAciB,QAAQ,IAA3C,SACA,uCACA,6BAAKf,MACL,oCACA,uBAAIC,WAGR,UAAChB,EAAD,YACE,yBACE,SAACC,EAAD,CAAoBsB,GAAG,OAAvB,qBAEF,yBACE,SAACtB,EAAD,CAAoBsB,GAAG,UAAvB,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QA/BL,CAmCF,C,+LCjDDC,EAAAA,EAAAA,SAAAA,QAJiB,+BAKjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SALW,SAQN,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,wBADF,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjB5B,EAAY,mCAAG,WAAM6B,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,IADjB,cACpBF,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZE,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADG,cACpBF,EADoB,yBAEnBA,EAASC,KAAKG,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADM,cACvBF,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,sDAKfC,EAAS,mCAAG,WAAMC,GAAN,uFACAZ,EAAAA,EAAAA,IAAA,8BAAiCY,IADjC,cACjBR,EADiB,yBAEhBA,EAASC,KAAKK,SAFE,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-left: 10px;\n  background-color: lightgray;\n`;\nexport const BackLink = styled(NavLink)`\n  display: block;\n  margin: 5px;\n  text-decoration: none;\n  color: black;\n  font-size: 20px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n\n  gap: 20px;\n  margin-left: 10px;\n`;\n\nexport const AdditionalInfoLink = styled(NavLink)`\n  color: brown;\n  text-decoration: none;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieByID } from 'services/api';\nimport {\n  AdditionalInfo,\n  AdditionalInfoLink,\n  BackLink,\n  Container,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieByID(movieId).then(movie => setMovie(movie));\n  }, [movieId]);\n  if (movie === null) {\n    return;\n  }\n  const { title, vote_average, poster_path, overview, genres } = movie;\n  const imageUrl = 'https://image.tmdb.org/t/p/w300/';\n  const genreList = genres\n    .map(movie => Object.values(movie).splice(1, 2, ''))\n    .join(', ');\n\n  return (\n    <>\n      <BackLink to={location.state || '/'}>Back</BackLink>\n      <Container>\n        <img src={`${imageUrl}${poster_path}`} alt={title} />\n        <div>\n          <h1>{title}</h1>\n          <h3>User score:</h3>\n          <p>{Math.ceil(Number(vote_average).toFixed(2) * 10)} %</p>\n          <h3>Owerview:</h3>\n          <p> {overview}</p>\n          <h3>Genres</h3>\n          <p>{genreList}</p>\n        </div>\n      </Container>\n      <AdditionalInfo>\n        <h3>\n          <AdditionalInfoLink to=\"cast\">Cast</AdditionalInfoLink>\n        </h3>\n        <h3>\n          <AdditionalInfoLink to=\"reviews\">Reviews</AdditionalInfoLink>\n        </h3>\n      </AdditionalInfo>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '709abf24a0faef9bf82bc0dd6f21c4f4';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["Container","styled","BackLink","NavLink","AdditionalInfo","AdditionalInfoLink","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieByID","then","title","vote_average","poster_path","overview","genreList","genres","map","Object","values","splice","join","to","state","src","alt","Math","ceil","Number","toFixed","Suspense","fallback","axios","api_key","language","getTrendingMovies","response","data","id","getMovieCast","cast","getMovieReviews","results","getMovies","query"],"sourceRoot":""}