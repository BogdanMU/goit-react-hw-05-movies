{"version":3,"file":"static/js/43.16ea6d99.chunk.js","mappings":"oOAEaA,EAAS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACE,iCACE,0BAAKD,EAAL,SACA,uBAAIC,MAGT,E,SCPYC,E,OAAcC,GAAAA,GAAH,6CCyBxB,EArBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GAASI,MAAK,SAAAC,GAAM,OAAIN,EAAWM,EAAf,GACrC,GAAE,CAACL,KAGF,SAACL,EAAD,UACGG,EAAQQ,KAAI,YAA8B,IAA3Bb,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASa,EAAS,EAATA,GAC/B,OACE,yBACE,SAACf,EAAD,CAAQC,OAAQA,EAAQC,QAASA,KAD1Ba,EAIZ,KAGN,C,+LCpBDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SALW,SAQN,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,wBADF,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMP,GAAN,uFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,IADjB,cACpBK,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZE,EAAY,mCAAG,WAAMR,GAAN,uFACHC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADG,cACpBK,EADoB,yBAEnBA,EAASC,KAAKG,MAFK,2CAAH,sDAKZb,EAAe,mCAAG,WAAMI,GAAN,uFACNC,EAAAA,EAAAA,IAAA,iBAAoBD,EAApB,aADM,cACvBK,EADuB,yBAEtBA,EAASC,KAAKI,SAFQ,2CAAH,sDAKfC,EAAS,mCAAG,WAAMC,GAAN,uFACAX,EAAAA,EAAAA,IAAA,8BAAiCW,IADjC,cACjBP,EADiB,yBAEhBA,EAASC,KAAKI,SAFE,2CAAH,qD","sources":["components/Reviews/Review.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nexport const Review = ({ author, content }) => {\n  return (\n    <>\n      <h3>{author} :</h3>\n      <p>{content}</p>\n    </>\n  );\n};\nReview.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/api';\nimport { Review } from './Review';\nimport { ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(review => setReviews(review));\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <Review author={author} content={content} />\n          </li>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '709abf24a0faef9bf82bc0dd6f21c4f4';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["Review","author","content","ReviewsList","styled","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReviews","then","review","map","id","axios","api_key","language","getTrendingMovies","response","data","getMovieByID","getMovieCast","cast","results","getMovies","query"],"sourceRoot":""}