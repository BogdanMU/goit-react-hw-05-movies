{"version":3,"file":"static/js/515.02abd91b.chunk.js","mappings":"iPAEaA,EAAWC,EAAAA,GAAAA,GAAH,iGCARC,EAAWD,EAAAA,GAAAA,GAAH,uC,SCCRE,EAAW,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,GAAIC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC1CC,EAAQ,0CAAsCD,GAKlD,OAJc,OAAVA,IACFC,EACE,uIAGF,UAACN,EAAD,YACE,gBAAKO,IAAKD,EAAUE,IAAKL,KACzB,uBAAIA,KACJ,uBAAIC,MAHSF,EAMlB,ECiBD,EA1Ba,WACX,OAAwBO,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,IAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAN,GAAI,OAAIC,EAAQD,EAAZ,GAChC,GAAE,CAACE,IAES,OAATF,EAIJ,OACE,SAACZ,EAAD,UACGY,EAAKO,KAAI,gBAAGf,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWc,EAAxB,EAAwBA,aAAxB,OACR,SAACjB,EAAD,CAEEE,KAAMA,EACNC,UAAWA,EACXC,MAAOa,GAHFhB,EAFC,KAUf,C,+LC1BDiB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SALW,SAQN,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,wBADF,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMvB,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,iBAAoBjB,IADjB,cACpBqB,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZT,EAAY,mCAAG,WAAMb,GAAN,uFACHiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aADG,cACpBqB,EADoB,yBAEnBA,EAASC,KAAKd,MAFK,2CAAH,sDAKZgB,EAAe,mCAAG,WAAMxB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,iBAAoBjB,EAApB,aADM,cACvBqB,EADuB,yBAEtBA,EAASC,KAAKG,SAFQ,2CAAH,sDAKfC,EAAS,mCAAG,WAAMC,GAAN,uFACAV,EAAAA,EAAAA,IAAA,8BAAiCU,IADjC,cACjBN,EADiB,yBAEhBA,EAASC,KAAKG,SAFE,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/CastCard.styled.jsx","components/Cast/CastCard.jsx","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  width: 15%;\n`;\n","import { CastItem } from './CastCard.styled';\nimport PropTypes from 'prop-types';\n\nexport const CastCard = ({ id, name, character, photo }) => {\n  let imageUrl = `https://image.tmdb.org/t/p/w200/${photo}`;\n  if (photo === null) {\n    imageUrl =\n      'https://hips.hearstapps.com/hmg-prod/images/legacy-fre-image-placeholder-1642515930.png?crop=0.667xw:1.00xh;0.167xw,0&resize=200:*';\n  }\n  return (\n    <CastItem key={id}>\n      <img src={imageUrl} alt={name} />\n      <p>{name}</p>\n      <p>{character}</p>\n    </CastItem>\n  );\n};\n\nCastCard.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  photo: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCast } from 'services/api';\nimport { CastList } from './Cast.styled';\nimport { CastCard } from './CastCard';\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(cast => setCast(cast));\n  }, [movieId]);\n\n  if (cast === null) {\n    return;\n  }\n\n  return (\n    <CastList>\n      {cast.map(({ id, name, character, profile_path }) => (\n        <CastCard\n          key={id}\n          name={name}\n          character={character}\n          photo={profile_path}\n        />\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '709abf24a0faef9bf82bc0dd6f21c4f4';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["CastList","styled","CastItem","CastCard","id","name","character","photo","imageUrl","src","alt","useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","map","profile_path","axios","api_key","language","getTrendingMovies","response","data","getMovieByID","getMovieReviews","results","getMovies","query"],"sourceRoot":""}