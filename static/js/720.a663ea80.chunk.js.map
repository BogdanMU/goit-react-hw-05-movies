{"version":3,"file":"static/js/720.a663ea80.chunk.js","mappings":"uOAEaA,EAAOC,EAAAA,GAAAA,KAAH,gI,SCIJC,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAY/B,OAJAC,EAAAA,EAAAA,YAAU,WACRN,EAASI,EACV,GAAE,CAACF,EAAcE,EAAOJ,KAGvB,UAACH,EAAD,CAAMU,SAXa,SAAAC,GACnBA,EAAMC,iBACNN,EAAgB,CAAEC,MAAOI,EAAME,OAAOC,SAASP,MAAMQ,QACrDJ,EAAME,OAAOG,OACd,EAOC,WACE,4BACE,kBAAOC,KAAK,OAAOC,KAAK,aAE1B,mBAAQD,KAAK,SAAb,sBAGL,E,kBC1BYE,EAAalB,EAAAA,GAAAA,GAAH,yHCsCvB,EAjCe,WACb,OAA0BmB,EAAAA,EAAAA,UAAS,MAAnC,eAAOb,EAAP,KAAcJ,EAAd,KACA,GAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MASjB,OAPAf,EAAAA,EAAAA,YAAU,WACM,OAAVF,IAGJkB,EAAAA,EAAAA,IAAUlB,GAAOmB,MAAK,SAAAL,GAAM,OAAIC,EAAUD,EAAd,GAC7B,GAAE,CAACd,KAGF,iCACE,SAACL,EAAD,CAAYC,SAAUA,IACrBkB,EAAOM,OAAS,IACf,UAACR,EAAD,YACE,SAAC,KAAD,CAAMS,GAAG,UACRP,EAAOQ,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eACjB,OACE,yBACE,SAAC,KAAD,CAASH,GAAE,kBAAaE,GAAME,MAAOT,EAArC,SACGQ,KAFID,EAMZ,SAKV,C,+LChCDG,EAAAA,EAAAA,SAAAA,QAJiB,+BAKjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SALW,SAQN,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,wBADF,cACzBI,EADyB,yBAExBA,EAASC,MAFe,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMT,GAAN,uFACHG,EAAAA,EAAAA,IAAA,iBAAoBH,IADjB,cACpBO,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZE,EAAY,mCAAG,WAAMV,GAAN,uFACHG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADG,cACpBO,EADoB,yBAEnBA,EAASC,KAAKG,MAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMZ,GAAN,uFACNG,EAAAA,EAAAA,IAAA,iBAAoBH,EAApB,aADM,cACvBO,EADuB,yBAEtBA,EAASC,KAAKK,SAFQ,2CAAH,sDAKflB,EAAS,mCAAG,WAAMlB,GAAN,uFACA0B,EAAAA,EAAAA,IAAA,8BAAiC1B,IADjC,cACjB8B,EADiB,yBAEhBA,EAASC,KAAKK,SAFE,2CAAH,qD","sources":["components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  display: flex;\n  gap: 5px;\n`;\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Form } from './SearchForm.styled';\n\nexport const SearchForm = ({ setQuery }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value });\n    event.target.reset();\n  };\n\n  useEffect(() => {\n    setQuery(query);\n  }, [searchParams, query, setQuery]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label>\n        <input type=\"text\" name=\"query\" />\n      </label>\n      <button type=\"submit\">Search</button>\n    </Form>\n  );\n};\n\nSearchForm.propTypes = {\n  setQuery: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import { useEffect, useState } from 'react';\n\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { getMovies } from 'services/api';\nimport { NavLink, Link, useLocation } from 'react-router-dom';\nimport { SearchList } from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n    getMovies(query).then(movies => setMovies(movies));\n  }, [query]);\n\n  return (\n    <>\n      <SearchForm setQuery={setQuery} />\n      {movies.length > 0 && (\n        <SearchList>\n          <Link to=\"../..\"></Link>\n          {movies.map(({ id, original_title }) => {\n            return (\n              <li key={id}>\n                <NavLink to={`/movies/${id}`} state={location}>\n                  {original_title}\n                </NavLink>\n              </li>\n            );\n          })}\n        </SearchList>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '709abf24a0faef9bf82bc0dd6f21c4f4';\nconst lang = 'en-US';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: lang,\n};\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/week');\n  return response.data;\n};\n\nexport const getMovieByID = async id => {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  return response.data.results;\n};\n\nexport const getMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n};\n"],"names":["Form","styled","SearchForm","setQuery","useSearchParams","searchParams","setSearchParams","query","get","useEffect","onSubmit","event","preventDefault","target","elements","value","reset","type","name","SearchList","useState","movies","setMovies","location","useLocation","getMovies","then","length","to","map","id","original_title","state","axios","api_key","language","getTrendingMovies","response","data","getMovieByID","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}